const netlifyPlugin = require("preact-cli-plugin-netlify");
const ImageminPlugin = require("imagemin-webpack-plugin").default;
const imageminMozjpeg = require("imagemin-mozjpeg");

module.exports = (config, env, helpers) => {
  netlifyPlugin(config);
  const cssLoaders = helpers.getLoadersByName(config, "css-loader");
  cssLoaders.forEach(({ rule, loader, loaderIndex }) => {
    loader.options = Object.assign(loader.options, {
      modules: false,
      localsConvention: "camelCaseOnly"
    });
    rule.use.splice(loaderIndex, 0, {
      loader: "@teamsupercell/typings-for-css-modules-loader",
      options: {
        banner: "// autogenerated by typings-for-css-modules-loader. \n// Please do not change this file!"
      }
    });
  });

  if (env.production && !env.ssr) {
    config.plugins.push(
      new ImageminPlugin({
        from: "./build/assets/**",
        pngquant: {
          quality: "60"
        },
        plugins: [
          imageminMozjpeg({
            quality: 50,
            progressive: true
          })
        ]
      })
    );
  }
  return config;
};
